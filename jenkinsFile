#!groovy

pipeline {
    agent {
        label 'retail-OnBuild'
    }
    options {
        timestamps ()
    }
    stages {
        stage('Clone') {
            steps {
                checkout scm
            }
        }
        stage('Init') {
            steps {
                script {
                    sh '''
                        echo GIT_BRANCH: ${GIT_BRANCH} >> ${WORKSPACE}/.buildinfo.txt
                        echo GIT_COMMIT: ${GIT_COMMIT} >> ${WORKSPACE}/.buildinfo.txt
                        echo GIT_AUTHOR_NAME: ${GIT_AUTHOR_NAME} >> ${WORKSPACE}/.buildinfo.txt

                        echo BUILD_URL: ${BUILD_URL} >> ${WORKSPACE}/.buildinfo.txt
                        echo NODE_NAME: ${NODE_NAME} >> ${WORKSPACE}/.buildinfo.txt
                        echo BUILD_TIME: ${IMAGE_BUILD_TIMESTAMP} >> ${WORKSPACE}/.buildinfo.txt
                        echo DOCKER_IMAGE : "${DOCKERHUB_IMAGE}" >> ${WORKSPACE}/.buildinfo.txt
                    '''
                }
            }
        }
        stage('Building') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_VERSION}", "--rm --no-cache -f ${WORKSPACE}/dockerFiles/hq.Dockerfile ${WORKSPACE}")
                }
            }
        }
        stage('Pushing') {
            steps {
                script {
                    docker.withRegistry(DOCKERHUB_URL, 'TechverxCloud-DockerHub') {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Cleanup') {
            steps {
                sh """
                    docker rmi ${IMAGE_NAME}:${IMAGE_VERSION}
                    docker rmi ${DOCKERHUB_IMAGE}
                """
            }
        }
    }
    environment {
        DOCKERHUB_URL = "https://hub.infra.techverxcloud.com"
        IMAGE_NAME = "fridaypos/food/frontend"
        IMAGE_VERSION = "${env.GIT_COMMIT.take(7)}"
        DOCKERHUB_IMAGE = "hub.infra.techverxcloud.com/${IMAGE_NAME}:${IMAGE_VERSION}"
        IMAGE_BUILD_TIMESTAMP = (new Date()).format('EEE, MMMM dd,yy hh:mm:ss a')
    }
}

